{"version":3,"sources":["components/Wrapper/Wrapper.module.css","components/Section/Section.module.css","components/OptionsFeedback/OptionsFeedback.module.css","components/Notification/Notification.module.css","components/Wrapper/Wrapper.js","components/Section/Section.js","components/OptionsFeedback/OptionsFeedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","Wrapper","children","className","styles","wrapper","Section","title","OptionsFeedback","options","clickFeedback","map","option","btn","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","text","App","state","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedback","Math","round","addFeedback","key","setState","prevState","this","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oIACAA,EAAOC,QAAU,CAAC,QAAU,2B,gBCA5BD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,KAAO,6B,uLCUVC,EARC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,qBAAKC,UAAWC,IAAOC,QAAvB,SAAiCH,K,gBCa3BI,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOL,EAAe,EAAfA,SACxB,OACE,gCACE,oBAAIC,UAAWC,IAAOG,MAAtB,SAA8BA,IAC7BL,M,gBCaQM,EAjBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OAAOD,EAAQE,KAAI,SAACC,GAAD,OACjB,wBAEET,UAAWC,IAAOS,IAClBC,QAAS,kBAAMJ,EAAcE,IAH/B,SAKGA,GAJIA,OCeIG,G,MAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,Y,iBCEWC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKnB,UAAWC,IAAOmB,KAAvB,SAA8BD,KCwDxBE,E,4MApDbC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,mBAAqB,WAEnB,OADcC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IAAI,I,EAIxEC,sBAAwB,WACtB,IAAMb,EAAQ,EAAKO,qBAEnB,OADmBO,KAAKC,MAAO,IAAMf,EAAS,EAAKM,MAAMT,O,EAI3DmB,YAAc,SAACC,GACb,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAME,EAAUF,GAAO,O,4CAI5B,WACE,MAA+BG,KAAKd,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,CAASX,MAAM,wBAAf,SACE,cAAC,EAAD,CACEE,QAASkB,OAAOa,KAAKD,KAAKd,OAC1Bf,cAAe6B,KAAKJ,gBAIxB,cAAC,EAAD,CAAS5B,MAAM,YAAf,SACGgC,KAAKb,qBACJ,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoB,KAAKb,qBACZN,mBAAoBmB,KAAKP,0BAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GA7ChBmB,aCKHC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.384c66d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__2IllK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3XwNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"OptionsFeedback_btn__k5iNj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1_yA6\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Wrapper.module.css\";\n\nconst Wrapper = ({ children }) => {\n  return <div className={styles.wrapper}>{children}</div>;\n};\n\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import PropTypes from \"prop-types\";\nimport styles from \"./OptionsFeedback.module.css\";\n\nconst OptionsFeedback = ({ options, clickFeedback }) => {\n  return options.map((option) => (\n    <button\n      key={option}\n      className={styles.btn}\n      onClick={() => clickFeedback(option)}\n    >\n      {option}\n    </button>\n  ));\n};\n\nOptionsFeedback.propTypes = {\n  option: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func,\n};\n\nexport default OptionsFeedback;\n","import PropTypes from \"prop-types\";\nimport \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total: {total}</p>\n    <p>Positive feedback: {positivePercentage}%</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return <div className={styles.text}>{message}</div>;\n};\n\nNotification.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport Wrapper from \"../Wrapper/Wrapper\";\nimport Section from \"../Section/Section\";\nimport OptionsFeedBack from \"../OptionsFeedback/OptionsFeedback\";\nimport Statistics from \"../Statistics/Statistics\";\nimport Notification from \"../Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const total = Object.values(this.state).reduce((acc, el) => acc + el, 0);\n    return total;\n  };\n\n  countPositiveFeedback = () => {\n    const total = this.countTotalFeedback();\n    const persantage = Math.round((100 / total) * this.state.good);\n    return persantage;\n  };\n\n  addFeedback = (key) => {\n    this.setState((prevState) => ({\n      [key]: prevState[key] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <Wrapper>\n        <Section title=\"Please leave feedback\">\n          <OptionsFeedBack\n            options={Object.keys(this.state)}\n            clickFeedback={this.addFeedback}\n          ></OptionsFeedBack>\n        </Section>\n\n        <Section title=\"Statistic\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedback()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}